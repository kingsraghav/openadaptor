<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id: db-csv.xml 1819 2008-10-23 11:23:33Z higginse $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/tags/3.4.8/example/spring/processors/csv/db-csv.xml $
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[    
  This adaptor does the following...
    
    * selects data from a db using a query generating a Map
    * converts the Map to a delimited string
    * writes data to a file
    
  It is designed to illustrate the basic structure of an adaptor that polls a database

  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config db-csv.xml 
    
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
    lib/opt/hsqldb.jar
    
  This example relies on a hypersonic database running (http://www.hsqldb.org) to run
  up the server make sure hsqldb.jar is in your class path and run the following...
  
    java org.hsqldb.Server -database.0 hsql -dbname.0 xdb
  ]]></description>
  
  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
    <property name="messageProcessor">
      <bean class="org.openadaptor.core.router.Router">
        <description>
            This creates the simple router Reader -> Writer.
        </description>
        <property name="processors">
          <list>
            <ref bean="Reader"/>
            <ref bean="MapToCSV"/>
            <ref bean="Writer"/>
          </list>
        </property>
      </bean>
    </property>
  </bean>
   
  <bean id="JdbcConnection" class="org.openadaptor.auxil.connector.jdbc.JDBCConnection">
    <description>This defines jdbc connection.</description>
    <property name="driver" value="org.hsqldb.jdbcDriver"/>
    <property name="url" value="jdbc:hsqldb:hsql://localhost/xdb"/>
    <property name="username" value="sa"/>
    <property name="password" value=""/>
  </bean>

  <bean id="Reader" class="org.openadaptor.auxil.connector.jdbc.reader.JDBCReadConnector">
    <description>Reader which polls database using configured SQL.</description>
    <property name="jdbcConnection" ref="JdbcConnection"/>
    <!-- batch size of 0 or less means process all rows in one message batch. -->
    <!-- batch size of one means process one row per message and so on -->
    <property name="batchSize" value="0"/>
    <property name="resultSetConverter">
      <bean class="org.openadaptor.auxil.connector.jdbc.reader.orderedmap.ResultSetToOrderedMapConverter"/>
    </property>
    <property name="sql">
      <value>
        SELECT t.BuySell as Side, t.Qty as Size, s.ShortCode as RIC,
               p.LongName as Counterparty, t.Price as Price
        FROM TRADE t, SECURITY s, PARTY p
        WHERE t.SecId = s.SecId AND t.PartyId = p.PartyId
      </value>
    </property>
  </bean>
  
  <bean id="MapToCSV" class="org.openadaptor.auxil.convertor.delimited.OrderedMapToDelimitedStringConvertor"/>
  
  <bean id="Writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector"/>  

</beans>