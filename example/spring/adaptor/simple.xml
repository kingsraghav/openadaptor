<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id: simple.xml 1162 2008-01-29 14:11:25Z lachork $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/tags/3.4.9/example/spring/adaptor/simple.xml $
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[    
  This (contrived) adaptor does the following...
    
    * reads lines from stdin
    * converts delmited input into a map
    * converts map to xml
    * writes to stdout
    
  It is designed to illustrate the basic structure of an adaptor in spring.

  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config simple.xml
    
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
     
  Once it is running it will wait for command line input
    
  type something like this...
    
    hello world
    
  ...and you should see it converted to something like this...
  
    &lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
    <record><field>hello world</field></record>
    
  In a realistic implementation the connectors could be reading/writing from/to
  enterprise middleware (jms, mqseries, tibco...etc), databases, webservices, filesystems, 
  ftp sites, tcp/ip sockets or specific system APIs. The processors could be converting this 
  data to a cannonical form, normalising and enriching it, validating it against enterprise 
  information models.      
  ]]></description>

  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
    <description>This is the bean that actually gets run.</description>
    <property name="messageProcessor">
      <bean class="org.openadaptor.core.router.Router">
        <description>processors defines a chain of processors through which records will pass</description>
        <property name="processors">
          <list>
            <ref bean="Reader"/>
            <ref bean="MapConverter"/>
            <ref bean="XmlConverter"/>
            <ref bean="Writer"/>
          </list>
        </property>
      </bean>
    </property>  
  </bean>
  
  <bean id="Reader" class="org.openadaptor.auxil.connector.iostream.reader.FileReadConnector">
    <description>This is a read connector, it reads records from a stream (stdin).</description>
  </bean>
  
  <bean id="MapConverter" class="org.openadaptor.auxil.convertor.delimited.DelimitedStringToOrderedMapConvertor">
    <description>This is a processor that converts delimited strings into an ordered map.</description>
    <property name="fieldNames">
      <list>
        <value>field</value>
      </list>
    </property>
  </bean>
  
  <bean id="XmlConverter" class="org.openadaptor.auxil.convertor.xml.OrderedMapToXmlConvertor">
    <description>This is a processor that converts an ordered map into an xml string.</description>
    <property name="rootElementTag" value="record"/>
  </bean>
  
  <bean id="Writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector">
    <description>This is a write connector that outputs the data to a stream (stdout).</description>
  </bean>
  
</beans>