<?xml version="1.0" encoding="UTF-8"?>
<!--
  $Id: router.xml 1162 2008-01-29 14:11:25Z lachork $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/trunk/example/spring/adaptor/router.xml $
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[    
  This (contrived) adaptor does the following...
    
    * reads lines from stdin
    * converts delmited input into a map
    * converts map to xml
    * writes to stdout
    
  It is designed to illustrate the basic structure of an adaptor router configuration.
  Example simple.xml configures a pipeline of components as an ordered list of
  components which constitute the Adaptor. 
  This example inllustrates an equivalent adaptor which defines the linkage between
  components using a processMap within Router. This permits more sophisticated 
  configurations such as:
  
  Branching (fanout)- the output of a component is routed to multiple processors
  Exception Management - specific exceptions can be trapped at any point in the processing
                         (see exceptions example).
  
  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config router.xml
    
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
     
  Once it is running it will wait for command line input
  
  type something like this...
    
    hello world
    
  ...and you should see it converted to something like this...
  
    &lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
    <record><field>hello world</field></record>
  ]]></description>
  
  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
    <description>This is the bean that actually gets run.</description>
    <property name="messageProcessor" ref="Router"/>
  </bean>
  
  <bean id="Router" class="org.openadaptor.core.router.Router">
    <description>
       The adaptor delegates it's message processing to a router. 
       The router uses this mapping to define the "processing pipeline".
    </description>
    <property name="processMap">
      <map>
        <entry key-ref="Reader" value-ref="MapConverter"/>
        <entry key-ref="MapConverter" value-ref="XmlConverter"/>
        <entry key-ref="XmlConverter" value-ref="Writer"/>
      </map>
    </property>
  </bean>

  <bean id="Reader" class="org.openadaptor.auxil.connector.iostream.reader.FileReadConnector">
    <description>This is a read connector, it reads records from stdin.</description>
  </bean>
  
  <bean id="MapConverter" class="org.openadaptor.auxil.convertor.delimited.DelimitedStringToOrderedMapConvertor">
    <description>This is a processor that converts delimited strings into an ordered map.</description>
    <property name="fieldNames">
      <list>
        <value>field</value>
      </list>
    </property>
  </bean>
  
  <bean id="XmlConverter" class="org.openadaptor.auxil.convertor.xml.OrderedMapToXmlConvertor">
    <description>This is a processor that converts an ordered map into an xml string.</description>
    <property name="rootElementTag" value="record"/>
  </bean>
  
  <bean id="Writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector">
    <description>This is a write connector that outputs the data to a stream (stdout).</description>
  </bean>
  
</beans>