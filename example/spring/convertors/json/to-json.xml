<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id: to-json.xml 1365 2008-04-14 15:14:11Z higginse $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/tags/3.4.9/example/spring/convertors/json/to-json.xml $
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
 
  <description><![CDATA[  
  This example adaptor illustrates the basic steps in generating json text.
    
    * reads a file consisting of rows of comma separated values.
    * converts it into OrderedMaps
    * converts from OrderedMaps to JSON
    * writes text to stdout
    
  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config to-json.xml
     
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
  ]]></description>
    
  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor"> 
    <description>Define the basic adaptor pipeline</description>
     <property name="messageProcessor">
      <bean class="org.openadaptor.core.router.Router">
        <property name="processors">
          <list>
            <ref bean="reader"/>
            <ref bean="toorderedmap"/>
            <ref bean="tojson"/>
            <ref bean="writer"/>
          </list>
        </property>
      </bean>
    </property>    
  </bean> 
  
  <bean id="reader" class="org.openadaptor.auxil.connector.iostream.reader.FileReadConnector">
    <description>Read in an entire xml document</description>
    <property name="filename" value="input/delim.csv"/>
    <property name="dataReader">
      <bean class="org.openadaptor.auxil.connector.iostream.reader.string.LineReader"/>
    </property>
  </bean>

  <bean id="toorderedmap" class="org.openadaptor.auxil.convertor.delimited.DelimitedStringToOrderedMapConvertor">
    <description>Convert to OrderedMap providing fields names.</description>
    <property name="fieldNames">
        <list>
            <value>username</value>
            <value>fullname</value>
            <value>uniqueid</value>
            <value>dob</value>
        </list>
    </property>
  </bean>
  
  <bean id="tojson" class="org.openadaptor.thirdparty.json.OrderedMapToJSONConvertor">
    <description>Generate a json string</description>
    <property name="tabSize" value="2"/>
  </bean>
  
  <bean id="writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector"/>
  
</beans>
