<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id: messageproperties-subscriber.xml 2078 2010-05-25 11:07:45Z lachork $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/tags/3.4.8/example/spring/connectors/jms/messageproperties-subscriber.xml $
 --> 
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[    
  This adaptor does the following...
    
    * listens to a jms topic
    * echoes any metadata read to a log
    * writes data to stdout
    
  It is designed to illustrate an adaptor that subscribes to a jms topic and populates the message metadata 
  from the values of any JMS Message Properties. The metadata is echoed to the log by the MetadataLogger.

  Run this example like this...

  java org.openadaptor.spring.SpringAdaptor -config messageproperties-subscriber.xml -props ../../../config/jms_*.properties
  
  using the appropriate jms property file.

  Suggested Classpath

    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
    appropiate jms client jars
     
  To verify that this is working you need put some data on the topic with populated jms message properties, the corresponding
  messageproperties_publisher example should do this.
  ]]></description>
  
 <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
   <property name="messageProcessor">
      <bean class="org.openadaptor.core.router.Router">
        <description>
          This creates the simple pipeline Reader -> MetadataLogger -> Writer.
        </description>
        <property name="processors">
          <list>
            <ref bean="Reader"/>
            <ref bean="MetadataLogger"/>
            <ref bean="Writer"/>
          </list>
        </property>
      </bean>
   </property>
 </bean>
  
  <bean id="JndiConnection" class="org.openadaptor.auxil.connector.jndi.JNDIConnection">
    <description>Defines jndi connection, from which we get jms connection.</description>
    <property name="initialContextFactory" value="${jndi.initialContextFactory}"/>
    <property name="providerUrl" value="${jndi.providerUrl}"/>
    <property name="securityPrincipal" value="${jndi.securityPrincipal}"/>
    <property name="securityCredentials" value="${jndi.securityCredentials}"/>
  </bean>
  
  <bean id="JmsConnection" class="org.openadaptor.auxil.connector.jms.JMSConnection">
    <description>jms connection for queue we wish to subscribe to.</description>
    <property name="jndiConnection" ref="JndiConnection"/>
    <property name="connectionFactoryName" value="${jms.ts.connectionFactoryName.1}"/>
    <property name="username" value="${jms.username}"/>
    <property name="password" value="${jms.password}"/>
  </bean>

  <bean id="Reader" class="org.openadaptor.auxil.connector.jms.JMSReadConnector">
    <description>Reader that polls a jms queue.</description>
    <property name="destinationName" value="${jms.t.destinationName.1}"/>
    <property name="jmsConnection" ref="JmsConnection"/>
    <property name="populateMetadataFromProperties" value="true"/>
  </bean>
  
  <bean id="MetadataLogger" class="org.openadaptor.auxil.processor.script.ScriptProcessor">
    <description>Simply log any metadata</description>
    <property name="script">
      <value>        
        oa_log.info("Data: " + oa_data + "\nMetadata:" + oa_metadata);
      </value>
    </property>
  </bean>  
  
  <bean id="Writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector"/>
  
</beans>