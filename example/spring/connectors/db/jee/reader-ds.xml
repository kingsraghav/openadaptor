<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id: reader-ds.xml 1579 2008-06-23 14:16:53Z higginse $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/trunk/example/spring/connectors/db/jee/reader-ds.xml $
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[    
  This adaptor assumes it runs within a jee container that has a JDBC DataSource available via JNDI. 
  It does the following...
    
    * establishes a database connection via a DataSource lookup in JNDI
    * selects data from a db using an SQL query
    * converts the result set to XML
    * writes data to stdout
    
  It is designed to illustrate the basic structure of an adaptor that looks up a db connection 
  via JNDI & DataSource.

  The way to run this adaptor will be specific to the jee application server it is deployed to.
  Look into ./jboss/ for instructions on how to create a Hypersonic data source and 
  deploy open adaptor to JBoss.

  ]]></description>
  
  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
    <property name="messageProcessor">
      <bean class="org.openadaptor.core.router.Router">
        <description>
            This creates the simple router Reader -> Writer.
        </description>
        <property name="processors">
          <list>
            <ref bean="Reader"/>
            <ref bean="Writer"/>
          </list>
        </property>
      </bean>
    </property>
  </bean>
   
  <bean id="JdbcConnection" class="org.openadaptor.auxil.connector.jdbc.JDBCConnection">
    <description>This gets jdbc connection from a data source (looked up via JNDI).</description>
    <property name="jndiConnection" ref="JndiConnection"/>
    <property name="dataSourceName" value="java:openadaptorDS"/>
  </bean>

  <bean id="JndiConnection" class="org.openadaptor.auxil.connector.jndi.JNDIConnection">
    <description>This represents a local JNDI connection.</description>
    <property name="initialContextFactory" value="org.jnp.interfaces.NamingContextFactory"/>
    <property name="providerUrl" value="jnp://localhost:1099"/>
  </bean>

  <bean id="Reader" class="org.openadaptor.auxil.connector.jdbc.reader.JDBCReadConnector">
    <description>Reader which queries database using configured SQL.</description>
    <property name="jdbcConnection" ref="JdbcConnection"/>
    <property name="batchSize" value="0"/>
    <property name="resultSetConverter">
      <bean class="org.openadaptor.auxil.connector.jdbc.reader.xml.ResultSetToXMLConverter"/>
    </property>
    <property name="sql">
      <value>
        SELECT t.BuySell as Side, t.Qty as Size, s.ShortCode as RIC,
               p.LongName as Counterparty, t.Price as Price
        FROM TRADE t, SECURITY s, PARTY p
        WHERE t.SecId = s.SecId AND t.PartyId = p.PartyId
      </value>
    </property>
  </bean>

  <bean id="Writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector"/>

</beans>
