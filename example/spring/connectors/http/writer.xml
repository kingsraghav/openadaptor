<?xml version="1.0" encoding="UTF-8"?>
<!--
  $Id: writer.xml 1590 2008-06-23 16:40:09Z higginse $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/tags/3.4.9/example/spring/connectors/http/writer.xml $
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[    
  This adaptor does the following...
    
    * writes console input to the HTTP server 
    
  It is designed to illustrate the basic structure of an adaptor that writes to an HTTP server

  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config writer.xml 
    
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
    
  You need to provide a valid URL to an HTTP server and, if needed, a proxy server (all are
  properties on the Writer bean below).  
  
  You can run an HTTP server that listens for requests from HttpWriteConnector using the example in servlet.xml:
  
     java org.openadaptor.spring.SpringAdaptor -config servlet.xml -bean Adaptor
    
  ]]></description>
  
  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
    <property name="messageProcessor">
      <bean class="org.openadaptor.core.router.Router">
        <description>
            This creates the simple router Reader -> Writer.
        </description>
        <property name="processors">
          <list>
            <ref bean="ConsoleReader"/>
            <ref bean="HttpWriter"/>
          </list>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="ConsoleReader" class="org.openadaptor.auxil.connector.iostream.reader.FileReadConnector"/>
 
  <bean id="HttpWriter" class="org.openadaptor.auxil.connector.http.HttpWriteConnector">
    <description>Writer that posts to HTTP server using configured URL.</description>
    <property name="url" value="http://localhost:9999"/>
    <!-- property name="proxyHost" value="???"/ -->
    <!-- property name="proxyPort" value="???"/ -->
  </bean>
  
</beans>