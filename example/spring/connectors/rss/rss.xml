<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id: rss.xml 1177 2008-01-30 10:47:05Z lachork $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/tags/3.4.9/example/spring/connectors/rss/rss.xml $
 --> 
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[
  Simple example to illustrate use of RSS connectors and Files
  Data originates: RSS
  Data processed : XSLT
  Data terminates: File

  Note: If you wish to run it through a proxy, then the adaptor will need to be run with
  appropriate System properties for the proxy configuration, e.g.

    -D http.proxyHost=<proxy-host> -D http.proxyPort=<proxy-port>

  Run using
    java org.openadaptor.spring.SpringAdaptor -config rss.xml
  ]]></description>

  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
  	<property name="messageProcessor">
  		<bean class="org.openadaptor.core.router.Router">
  			<description>
  				This creates the simple pipeline RSS_Reader ->
  				Xslt_Processor -> File_Writer.
  			</description>
  			<property name="processors">
  				<list>
  					<ref bean="RSS_Reader" />
  					<ref bean="Xslt_Processor" />
  					<ref bean="File_Writer" />
  				</list>
  			</property>
  		</bean>
  	</property>
  </bean>


  <bean id="RSS_Reader" class="org.openadaptor.core.connector.LoopingPollingReadConnector">
    <description>Poll twice with 5 min interval.</description>
    <property name="pollLimit" value="2"/>
    <property name="pollIntervalMins" value="5"/>

    <property name="delegate">
      <bean class="org.openadaptor.thirdparty.rss.RSSReadConnector">
        <description>This is the RSS Reader. Example polls twice with a five minute interval.</description>
        <!-- Add the feeds here -->
        <property name="urlStrings">
          <list>
            <value>http://www.theregister.co.uk/headlines.rss</value>
            <value>http://slashdot.org/slashdot.rss</value>
            <!--
            <value>http://rss.cnn.com/rss/cnn_topstories.rss</value>
            <value>http://news.bbc.co.uk/rss/newsonline_world_edition/front_page/rss091.xml</value>
            <value>http://rss.news.yahoo.com/rss/topstories</value>
            -->
          </list>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="Xslt_Processor" class="org.openadaptor.auxil.processor.xml.XsltProcessor">
    <description>Process the XML string using the XLST defined in the xsl directory.</description>
    <!-- Substitute with your favourite XSLT -->
    <!-- <property name="xsltFile" value="xsl/rss10.xsl"/>-->
    <property name="xsltFile" value="xsl/rss.xsl"/>
  </bean>

  <bean id="File_Writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector">
    <property name="filename" value="rss_out.html"/>
    <property name="append" value="false"/>
  </bean>
  
</beans>
